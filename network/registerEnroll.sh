#!/bin/bash

function createwasteCollectionCompany() {
  echo "Enrolling the CA admin"
  mkdir -p organizations/peerOrganizations/wasteCollectionCompany.wasteManagement.com/

  export FABRIC_CA_CLIENT_HOME=${PWD}/organizations/peerOrganizations/wasteCollectionCompany.wasteManagement.com/

  set -x
  fabric-ca-client enroll -u https://admin:adminpw@localhost:7056 --caname ca-wasteCollectionCompany --tls.certfiles "${PWD}/organizations/fabric-ca/wasteCollectionCompany/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo 'NodeOUs:
  Enable: true
  ClientOUIdentifier:
    Certificate: cacerts/localhost-7056-ca-wasteCollectionCompany.pem
    OrganizationalUnitIdentifier: client
  PeerOUIdentifier:
    Certificate: cacerts/localhost-7056-ca-wasteCollectionCompany.pem
    OrganizationalUnitIdentifier: peer
  AdminOUIdentifier:
    Certificate: cacerts/localhost-7056-ca-wasteCollectionCompany.pem
    OrganizationalUnitIdentifier: admin
  OrdererOUIdentifier:
    Certificate: cacerts/localhost-7056-ca-wasteCollectionCompany.pem
    OrganizationalUnitIdentifier: orderer' > "${PWD}/organizations/peerOrganizations/wasteCollectionCompany.wasteManagement.com/msp/config.yaml"

  # Since the CA serves as both the organization CA and TLS CA, copy the org's root cert that was generated by CA startup into the org level ca and tlsca directories

  # Copy wasteCollectionCompany's CA cert to wasteCollectionCompany's /msp/tlscacerts directory (for use in the channel MSP definition)
  mkdir -p "${PWD}/organizations/peerOrganizations/wasteCollectionCompany.wasteManagement.com/msp/tlscacerts"
  cp "${PWD}/organizations/fabric-ca/wasteCollectionCompany/ca-cert.pem" "${PWD}/organizations/peerOrganizations/wasteCollectionCompany.wasteManagement.com/msp/tlscacerts/ca.crt"

  # Copy wasteCollectionCompany's CA cert to wasteCollectionCompany's /tlsca directory (for use by clients)
  mkdir -p "${PWD}/organizations/peerOrganizations/wasteCollectionCompany.wasteManagement.com/tlsca"
  cp "${PWD}/organizations/fabric-ca/wasteCollectionCompany/ca-cert.pem" "${PWD}/organizations/peerOrganizations/wasteCollectionCompany.wasteManagement.com/tlsca/tlsca.wasteCollectionCompany.wasteManagement.com-cert.pem"

  # Copy wasteCollectionCompany's CA cert to wasteCollectionCompany's /ca directory (for use by clients)
  mkdir -p "${PWD}/organizations/peerOrganizations/wasteCollectionCompany.wasteManagement.com/ca"
  cp "${PWD}/organizations/fabric-ca/wasteCollectionCompany/ca-cert.pem" "${PWD}/organizations/peerOrganizations/wasteCollectionCompany.wasteManagement.com/ca/ca.wasteCollectionCompany.wasteManagement.com-cert.pem"

  echo "Registering peer0"
  set -x
  fabric-ca-client register --caname ca-wasteCollectionCompany --id.name peer0 --id.secret peer0pw --id.type peer --tls.certfiles "${PWD}/organizations/fabric-ca/wasteCollectionCompany/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo "Registering peer1"
  set -x
  fabric-ca-client register --caname ca-wasteCollectionCompany --id.name peer1 --id.secret peer1pw --id.type peer --tls.certfiles "${PWD}/organizations/fabric-ca/wasteCollectionCompany/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo "Registering user"
  set -x
  fabric-ca-client register --caname ca-wasteCollectionCompany --id.name user1 --id.secret user1pw --id.type client --tls.certfiles "${PWD}/organizations/fabric-ca/wasteCollectionCompany/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo "Registering the org admin"
  set -x
  fabric-ca-client register --caname ca-wasteCollectionCompany --id.name wasteCollectionCompanyadmin --id.secret wasteCollectionCompanyadminpw --id.type admin --tls.certfiles "${PWD}/organizations/fabric-ca/wasteCollectionCompany/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo "Generating the peer0 msp"
  set -x
  fabric-ca-client enroll -u https://peer0:peer0pw@localhost:7056 --caname ca-wasteCollectionCompany -M "${PWD}/organizations/peerOrganizations/wasteCollectionCompany.wasteManagement.com/peers/peer0.wasteCollectionCompany.wasteManagement.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/wasteCollectionCompany/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/wasteCollectionCompany.wasteManagement.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/wasteCollectionCompany.wasteManagement.com/peers/peer0.wasteCollectionCompany.wasteManagement.com/msp/config.yaml"

  echo "Generating the peer0-tls certificates, use --csr.hosts to specify Subject Alternative Names"
  set -x
  fabric-ca-client enroll -u https://peer0:peer0pw@localhost:7056 --caname ca-wasteCollectionCompany -M "${PWD}/organizations/peerOrganizations/wasteCollectionCompany.wasteManagement.com/peers/peer0.wasteCollectionCompany.wasteManagement.com/tls" --enrollment.profile tls --csr.hosts peer0.wasteCollectionCompany.wasteManagement.com --csr.hosts localhost --tls.certfiles "${PWD}/organizations/fabric-ca/wasteCollectionCompany/ca-cert.pem"
  { set +x; } 2>/dev/null

  # Copy the tls CA cert, server cert, server keystore to well known file names in the peer's tls directory that are referenced by peer startup config
  cp "${PWD}/organizations/peerOrganizations/wasteCollectionCompany.wasteManagement.com/peers/peer0.wasteCollectionCompany.wasteManagement.com/tls/tlscacerts/"* "${PWD}/organizations/peerOrganizations/wasteCollectionCompany.wasteManagement.com/peers/peer0.wasteCollectionCompany.wasteManagement.com/tls/ca.crt"
  cp "${PWD}/organizations/peerOrganizations/wasteCollectionCompany.wasteManagement.com/peers/peer0.wasteCollectionCompany.wasteManagement.com/tls/signcerts/"* "${PWD}/organizations/peerOrganizations/wasteCollectionCompany.wasteManagement.com/peers/peer0.wasteCollectionCompany.wasteManagement.com/tls/server.crt"
  cp "${PWD}/organizations/peerOrganizations/wasteCollectionCompany.wasteManagement.com/peers/peer0.wasteCollectionCompany.wasteManagement.com/tls/keystore/"* "${PWD}/organizations/peerOrganizations/wasteCollectionCompany.wasteManagement.com/peers/peer0.wasteCollectionCompany.wasteManagement.com/tls/server.key"

  ##new
  echo "Generating the peer1 msp"
  set -x
  fabric-ca-client enroll -u https://peer1:peer1pw@localhost:7056 --caname ca-wasteCollectionCompany -M "${PWD}/organizations/peerOrganizations/wasteCollectionCompany.wasteManagement.com/peers/peer1.wasteCollectionCompany.wasteManagement.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/wasteCollectionCompany/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/wasteCollectionCompany.wasteManagement.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/wasteCollectionCompany.wasteManagement.com/peers/peer1.wasteCollectionCompany.wasteManagement.com/msp/config.yaml"

  echo "Generating the peer1-tls certificates, use --csr.hosts to specify Subject Alternative Names"
  set -x
  fabric-ca-client enroll -u https://peer1:peer1pw@localhost:7056 --caname ca-wasteCollectionCompany -M "${PWD}/organizations/peerOrganizations/wasteCollectionCompany.wasteManagement.com/peers/peer1.wasteCollectionCompany.wasteManagement.com/tls" --enrollment.profile tls --csr.hosts peer1.wasteCollectionCompany.wasteManagement.com --csr.hosts localhost --tls.certfiles "${PWD}/organizations/fabric-ca/wasteCollectionCompany/ca-cert.pem"
  { set +x; } 2>/dev/null

  # Copy the tls CA cert, server cert, server keystore to well known file names in the peer's tls directory that are referenced by peer startup config
  cp "${PWD}/organizations/peerOrganizations/wasteCollectionCompany.wasteManagement.com/peers/peer1.wasteCollectionCompany.wasteManagement.com/tls/tlscacerts/"* "${PWD}/organizations/peerOrganizations/wasteCollectionCompany.wasteManagement.com/peers/peer1.wasteCollectionCompany.wasteManagement.com/tls/ca.crt"
  cp "${PWD}/organizations/peerOrganizations/wasteCollectionCompany.wasteManagement.com/peers/peer1.wasteCollectionCompany.wasteManagement.com/tls/signcerts/"* "${PWD}/organizations/peerOrganizations/wasteCollectionCompany.wasteManagement.com/peers/peer1.wasteCollectionCompany.wasteManagement.com/tls/server.crt"
  cp "${PWD}/organizations/peerOrganizations/wasteCollectionCompany.wasteManagement.com/peers/peer1.wasteCollectionCompany.wasteManagement.com/tls/keystore/"* "${PWD}/organizations/peerOrganizations/wasteCollectionCompany.wasteManagement.com/peers/peer1.wasteCollectionCompany.wasteManagement.com/tls/server.key"

  echo "Generating the user msp"
  set -x
  fabric-ca-client enroll -u https://user1:user1pw@localhost:7056 --caname ca-wasteCollectionCompany -M "${PWD}/organizations/peerOrganizations/wasteCollectionCompany.wasteManagement.com/users/User1@wasteCollectionCompany.wasteManagement.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/wasteCollectionCompany/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/wasteCollectionCompany.wasteManagement.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/wasteCollectionCompany.wasteManagement.com/users/User1@wasteCollectionCompany.wasteManagement.com/msp/config.yaml"

  echo "Generating the org admin msp"
  set -x
  fabric-ca-client enroll -u https://wasteCollectionCompanyadmin:wasteCollectionCompanyadminpw@localhost:7056 --caname ca-wasteCollectionCompany -M "${PWD}/organizations/peerOrganizations/wasteCollectionCompany.wasteManagement.com/users/Admin@wasteCollectionCompany.wasteManagement.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/wasteCollectionCompany/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/wasteCollectionCompany.wasteManagement.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/wasteCollectionCompany.wasteManagement.com/users/Admin@wasteCollectionCompany.wasteManagement.com/msp/config.yaml"
}

function createrecyclingcenter() {
  echo "Enrolling the CA admin"
  mkdir -p organizations/peerOrganizations/recyclingcenter.wasteManagement.com/

  export FABRIC_CA_CLIENT_HOME=${PWD}/organizations/peerOrganizations/recyclingcenter.wasteManagement.com/

  set -x
  fabric-ca-client enroll -u https://admin:adminpw@localhost:7054 --caname ca-recyclingcenter --tls.certfiles "${PWD}/organizations/fabric-ca/recyclingcenter/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo 'NodeOUs:
  Enable: true
  ClientOUIdentifier:
    Certificate: cacerts/localhost-7054-ca-recyclingcenter.pem
    OrganizationalUnitIdentifier: client
  PeerOUIdentifier:
    Certificate: cacerts/localhost-7054-ca-recyclingcenter.pem
    OrganizationalUnitIdentifier: peer
  AdminOUIdentifier:
    Certificate: cacerts/localhost-7054-ca-recyclingcenter.pem
    OrganizationalUnitIdentifier: admin
  OrdererOUIdentifier:
    Certificate: cacerts/localhost-7054-ca-recyclingcenter.pem
    OrganizationalUnitIdentifier: orderer' > "${PWD}/organizations/peerOrganizations/recyclingcenter.wasteManagement.com/msp/config.yaml"

  # Since the CA serves as both the organization CA and TLS CA, copy the org's root cert that was generated by CA startup into the org level ca and tlsca directories

  # Copy recyclingcenter's CA cert to recyclingcenter's /msp/tlscacerts directory (for use in the channel MSP definition)
  mkdir -p "${PWD}/organizations/peerOrganizations/recyclingcenter.wasteManagement.com/msp/tlscacerts"
  cp "${PWD}/organizations/fabric-ca/recyclingcenter/ca-cert.pem" "${PWD}/organizations/peerOrganizations/recyclingcenter.wasteManagement.com/msp/tlscacerts/ca.crt"

  # Copy recyclingcenter's CA cert to recyclingcenter's /tlsca directory (for use by clients)
  mkdir -p "${PWD}/organizations/peerOrganizations/recyclingcenter.wasteManagement.com/tlsca"
  cp "${PWD}/organizations/fabric-ca/recyclingcenter/ca-cert.pem" "${PWD}/organizations/peerOrganizations/recyclingcenter.wasteManagement.com/tlsca/tlsca.recyclingcenter.wasteManagement.com-cert.pem"

  # Copy recyclingcenter's CA cert to recyclingcenter's /ca directory (for use by clients)
  mkdir -p "${PWD}/organizations/peerOrganizations/recyclingcenter.wasteManagement.com/ca"
  cp "${PWD}/organizations/fabric-ca/recyclingcenter/ca-cert.pem" "${PWD}/organizations/peerOrganizations/recyclingcenter.wasteManagement.com/ca/ca.recyclingcenter.wasteManagement.com-cert.pem"

  echo "Registering peer0"
  set -x
  fabric-ca-client register --caname ca-recyclingcenter --id.name peer0 --id.secret peer0pw --id.type peer --tls.certfiles "${PWD}/organizations/fabric-ca/recyclingcenter/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo "Registering user"
  set -x
  fabric-ca-client register --caname ca-recyclingcenter --id.name user1 --id.secret user1pw --id.type client --tls.certfiles "${PWD}/organizations/fabric-ca/recyclingcenter/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo "Registering the org admin"
  set -x
  fabric-ca-client register --caname ca-recyclingcenter --id.name recyclingcenteradmin --id.secret recyclingcenteradminpw --id.type admin --tls.certfiles "${PWD}/organizations/fabric-ca/recyclingcenter/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo "Generating the peer0 msp"
  set -x
  fabric-ca-client enroll -u https://peer0:peer0pw@localhost:7054 --caname ca-recyclingcenter -M "${PWD}/organizations/peerOrganizations/recyclingcenter.wasteManagement.com/peers/peer0.recyclingcenter.wasteManagement.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/recyclingcenter/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/recyclingcenter.wasteManagement.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/recyclingcenter.wasteManagement.com/peers/peer0.recyclingcenter.wasteManagement.com/msp/config.yaml"

  echo "Generating the peer0-tls certificates, use --csr.hosts to specify Subject Alternative Names"
  set -x
  fabric-ca-client enroll -u https://peer0:peer0pw@localhost:7054 --caname ca-recyclingcenter -M "${PWD}/organizations/peerOrganizations/recyclingcenter.wasteManagement.com/peers/peer0.recyclingcenter.wasteManagement.com/tls" --enrollment.profile tls --csr.hosts peer0.recyclingcenter.wasteManagement.com --csr.hosts localhost --tls.certfiles "${PWD}/organizations/fabric-ca/recyclingcenter/ca-cert.pem"
  { set +x; } 2>/dev/null

  # Copy the tls CA cert, server cert, server keystore to well known file names in the peer's tls directory that are referenced by peer startup config
  cp "${PWD}/organizations/peerOrganizations/recyclingcenter.wasteManagement.com/peers/peer0.recyclingcenter.wasteManagement.com/tls/tlscacerts/"* "${PWD}/organizations/peerOrganizations/recyclingcenter.wasteManagement.com/peers/peer0.recyclingcenter.wasteManagement.com/tls/ca.crt"
  cp "${PWD}/organizations/peerOrganizations/recyclingcenter.wasteManagement.com/peers/peer0.recyclingcenter.wasteManagement.com/tls/signcerts/"* "${PWD}/organizations/peerOrganizations/recyclingcenter.wasteManagement.com/peers/peer0.recyclingcenter.wasteManagement.com/tls/server.crt"
  cp "${PWD}/organizations/peerOrganizations/recyclingcenter.wasteManagement.com/peers/peer0.recyclingcenter.wasteManagement.com/tls/keystore/"* "${PWD}/organizations/peerOrganizations/recyclingcenter.wasteManagement.com/peers/peer0.recyclingcenter.wasteManagement.com/tls/server.key"

  echo "Generating the user msp"
  set -x
  fabric-ca-client enroll -u https://user1:user1pw@localhost:7054 --caname ca-recyclingcenter -M "${PWD}/organizations/peerOrganizations/recyclingcenter.wasteManagement.com/users/User1@recyclingcenter.wasteManagement.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/recyclingcenter/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/recyclingcenter.wasteManagement.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/recyclingcenter.wasteManagement.com/users/User1@recyclingcenter.wasteManagement.com/msp/config.yaml"

  echo "Generating the org admin msp"
  set -x
  fabric-ca-client enroll -u https://recyclingcenteradmin:recyclingcenteradminpw@localhost:7054 --caname ca-recyclingcenter -M "${PWD}/organizations/peerOrganizations/recyclingcenter.wasteManagement.com/users/Admin@recyclingcenter.wasteManagement.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/recyclingcenter/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/recyclingcenter.wasteManagement.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/recyclingcenter.wasteManagement.com/users/Admin@recyclingcenter.wasteManagement.com/msp/config.yaml"
}

function creategovernment() {
  echo "Enrolling the CA admin"
  mkdir -p organizations/peerOrganizations/government.wasteManagement.com/

  export FABRIC_CA_CLIENT_HOME=${PWD}/organizations/peerOrganizations/government.wasteManagement.com/

  set -x
  fabric-ca-client enroll -u https://admin:adminpw@localhost:8054 --caname ca-government --tls.certfiles "${PWD}/organizations/fabric-ca/government/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo 'NodeOUs:
  Enable: true
  ClientOUIdentifier:
    Certificate: cacerts/localhost-8054-ca-government.pem
    OrganizationalUnitIdentifier: client
  PeerOUIdentifier:
    Certificate: cacerts/localhost-8054-ca-government.pem
    OrganizationalUnitIdentifier: peer
  AdminOUIdentifier:
    Certificate: cacerts/localhost-8054-ca-government.pem
    OrganizationalUnitIdentifier: admin
  OrdererOUIdentifier:
    Certificate: cacerts/localhost-8054-ca-government.pem
    OrganizationalUnitIdentifier: orderer' > "${PWD}/organizations/peerOrganizations/government.wasteManagement.com/msp/config.yaml"

  # Since the CA serves as both the organization CA and TLS CA, copy the org's root cert that was generated by CA startup into the org level ca and tlsca directories

  # Copy government's CA cert to government's /msp/tlscacerts directory (for use in the channel MSP definition)
  mkdir -p "${PWD}/organizations/peerOrganizations/government.wasteManagement.com/msp/tlscacerts"
  cp "${PWD}/organizations/fabric-ca/government/ca-cert.pem" "${PWD}/organizations/peerOrganizations/government.wasteManagement.com/msp/tlscacerts/ca.crt"

  # Copy government's CA cert to government's /tlsca directory (for use by clients)
  mkdir -p "${PWD}/organizations/peerOrganizations/government.wasteManagement.com/tlsca"
  cp "${PWD}/organizations/fabric-ca/government/ca-cert.pem" "${PWD}/organizations/peerOrganizations/government.wasteManagement.com/tlsca/tlsca.government.wasteManagement.com-cert.pem"

  # Copy government's CA cert to government's /ca directory (for use by clients)
  mkdir -p "${PWD}/organizations/peerOrganizations/government.wasteManagement.com/ca"
  cp "${PWD}/organizations/fabric-ca/government/ca-cert.pem" "${PWD}/organizations/peerOrganizations/government.wasteManagement.com/ca/ca.government.wasteManagement.com-cert.pem"

  echo "Registering peer0"
  set -x
  fabric-ca-client register --caname ca-government --id.name peer0 --id.secret peer0pw --id.type peer --tls.certfiles "${PWD}/organizations/fabric-ca/government/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo "Registering user"
  set -x
  fabric-ca-client register --caname ca-government --id.name user1 --id.secret user1pw --id.type client --tls.certfiles "${PWD}/organizations/fabric-ca/government/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo "Registering the org admin"
  set -x
  fabric-ca-client register --caname ca-government --id.name governmentadmin --id.secret governmentadminpw --id.type admin --tls.certfiles "${PWD}/organizations/fabric-ca/government/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo "Generating the peer0 msp"
  set -x
  fabric-ca-client enroll -u https://peer0:peer0pw@localhost:8054 --caname ca-government -M "${PWD}/organizations/peerOrganizations/government.wasteManagement.com/peers/peer0.government.wasteManagement.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/government/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/government.wasteManagement.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/government.wasteManagement.com/peers/peer0.government.wasteManagement.com/msp/config.yaml"

  echo "Generating the peer0-tls certificates, use --csr.hosts to specify Subject Alternative Names"
  set -x
  fabric-ca-client enroll -u https://peer0:peer0pw@localhost:8054 --caname ca-government -M "${PWD}/organizations/peerOrganizations/government.wasteManagement.com/peers/peer0.government.wasteManagement.com/tls" --enrollment.profile tls --csr.hosts peer0.government.wasteManagement.com --csr.hosts localhost --tls.certfiles "${PWD}/organizations/fabric-ca/government/ca-cert.pem"
  { set +x; } 2>/dev/null

  # Copy the tls CA cert, server cert, server keystore to well known file names in the peer's tls directory that are referenced by peer startup config
  cp "${PWD}/organizations/peerOrganizations/government.wasteManagement.com/peers/peer0.government.wasteManagement.com/tls/tlscacerts/"* "${PWD}/organizations/peerOrganizations/government.wasteManagement.com/peers/peer0.government.wasteManagement.com/tls/ca.crt"
  cp "${PWD}/organizations/peerOrganizations/government.wasteManagement.com/peers/peer0.government.wasteManagement.com/tls/signcerts/"* "${PWD}/organizations/peerOrganizations/government.wasteManagement.com/peers/peer0.government.wasteManagement.com/tls/server.crt"
  cp "${PWD}/organizations/peerOrganizations/government.wasteManagement.com/peers/peer0.government.wasteManagement.com/tls/keystore/"* "${PWD}/organizations/peerOrganizations/government.wasteManagement.com/peers/peer0.government.wasteManagement.com/tls/server.key"

  echo "Generating the user msp"
  set -x
  fabric-ca-client enroll -u https://user1:user1pw@localhost:8054 --caname ca-government -M "${PWD}/organizations/peerOrganizations/government.wasteManagement.com/users/User1@government.wasteManagement.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/government/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/government.wasteManagement.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/government.wasteManagement.com/users/User1@government.wasteManagement.com/msp/config.yaml"

  echo "Generating the org admin msp"
  set -x
  fabric-ca-client enroll -u https://governmentadmin:governmentadminpw@localhost:8054 --caname ca-government -M "${PWD}/organizations/peerOrganizations/government.wasteManagement.com/users/Admin@government.wasteManagement.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/government/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/government.wasteManagement.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/government.wasteManagement.com/users/Admin@government.wasteManagement.com/msp/config.yaml"
}

#new start
function createmanufacture() {
  echo "Enrolling the CA admin"
  mkdir -p organizations/peerOrganizations/manufacture.wasteManagement.com/

  export FABRIC_CA_CLIENT_HOME=${PWD}/organizations/peerOrganizations/manufacture.wasteManagement.com/

  set -x
  fabric-ca-client enroll -u https://admin:adminpw@localhost:8055 --caname ca-manufacture --tls.certfiles "${PWD}/organizations/fabric-ca/manufacture/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo 'NodeOUs:
  Enable: true
  ClientOUIdentifier:
    Certificate: cacerts/localhost-8055-ca-manufacture.pem
    OrganizationalUnitIdentifier: client
  PeerOUIdentifier:
    Certificate: cacerts/localhost-8055-ca-manufacture.pem
    OrganizationalUnitIdentifier: peer
  AdminOUIdentifier:
    Certificate: cacerts/localhost-8055-ca-manufacture.pem
    OrganizationalUnitIdentifier: admin
  OrdererOUIdentifier:
    Certificate: cacerts/localhost-8055-ca-manufacture.pem
    OrganizationalUnitIdentifier: orderer' > "${PWD}/organizations/peerOrganizations/manufacture.wasteManagement.com/msp/config.yaml"

  # Since the CA serves as both the organization CA and TLS CA, copy the org's root cert that was generated by CA startup into the org level ca and tlsca directories

  # Copy manufacture's CA cert to manufacture's /msp/tlscacerts directory (for use in the channel MSP definition)
  mkdir -p "${PWD}/organizations/peerOrganizations/manufacture.wasteManagement.com/msp/tlscacerts"
  cp "${PWD}/organizations/fabric-ca/manufacture/ca-cert.pem" "${PWD}/organizations/peerOrganizations/manufacture.wasteManagement.com/msp/tlscacerts/ca.crt"

  # Copy manufacture's CA cert to manufacture's /tlsca directory (for use by clients)
  mkdir -p "${PWD}/organizations/peerOrganizations/manufacture.wasteManagement.com/tlsca"
  cp "${PWD}/organizations/fabric-ca/manufacture/ca-cert.pem" "${PWD}/organizations/peerOrganizations/manufacture.wasteManagement.com/tlsca/tlsca.manufacture.wasteManagement.com-cert.pem"

  # Copy manufacture's CA cert to manufacture's /ca directory (for use by clients)
  mkdir -p "${PWD}/organizations/peerOrganizations/manufacture.wasteManagement.com/ca"
  cp "${PWD}/organizations/fabric-ca/manufacture/ca-cert.pem" "${PWD}/organizations/peerOrganizations/manufacture.wasteManagement.com/ca/ca.manufacture.wasteManagement.com-cert.pem"

  echo "Registering peer0"
  set -x
  fabric-ca-client register --caname ca-manufacture --id.name peer0 --id.secret peer0pw --id.type peer --tls.certfiles "${PWD}/organizations/fabric-ca/manufacture/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo "Registering user"
  set -x
  fabric-ca-client register --caname ca-manufacture --id.name user1 --id.secret user1pw --id.type client --tls.certfiles "${PWD}/organizations/fabric-ca/manufacture/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo "Registering the org admin"
  set -x
  fabric-ca-client register --caname ca-manufacture --id.name manufactureadmin --id.secret manufactureadminpw --id.type admin --tls.certfiles "${PWD}/organizations/fabric-ca/manufacture/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo "Generating the peer0 msp"
  set -x
  fabric-ca-client enroll -u https://peer0:peer0pw@localhost:8055 --caname ca-manufacture -M "${PWD}/organizations/peerOrganizations/manufacture.wasteManagement.com/peers/peer0.manufacture.wasteManagement.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/manufacture/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/manufacture.wasteManagement.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/manufacture.wasteManagement.com/peers/peer0.manufacture.wasteManagement.com/msp/config.yaml"

  echo "Generating the peer0-tls certificates, use --csr.hosts to specify Subject Alternative Names"
  set -x
  fabric-ca-client enroll -u https://peer0:peer0pw@localhost:8055 --caname ca-manufacture -M "${PWD}/organizations/peerOrganizations/manufacture.wasteManagement.com/peers/peer0.manufacture.wasteManagement.com/tls" --enrollment.profile tls --csr.hosts peer0.manufacture.wasteManagement.com --csr.hosts localhost --tls.certfiles "${PWD}/organizations/fabric-ca/manufacture/ca-cert.pem"
  { set +x; } 2>/dev/null

  # Copy the tls CA cert, server cert, server keystore to well known file names in the peer's tls directory that are referenced by peer startup config
  cp "${PWD}/organizations/peerOrganizations/manufacture.wasteManagement.com/peers/peer0.manufacture.wasteManagement.com/tls/tlscacerts/"* "${PWD}/organizations/peerOrganizations/manufacture.wasteManagement.com/peers/peer0.manufacture.wasteManagement.com/tls/ca.crt"
  cp "${PWD}/organizations/peerOrganizations/manufacture.wasteManagement.com/peers/peer0.manufacture.wasteManagement.com/tls/signcerts/"* "${PWD}/organizations/peerOrganizations/manufacture.wasteManagement.com/peers/peer0.manufacture.wasteManagement.com/tls/server.crt"
  cp "${PWD}/organizations/peerOrganizations/manufacture.wasteManagement.com/peers/peer0.manufacture.wasteManagement.com/tls/keystore/"* "${PWD}/organizations/peerOrganizations/manufacture.wasteManagement.com/peers/peer0.manufacture.wasteManagement.com/tls/server.key"

  echo "Generating the user msp"
  set -x
  fabric-ca-client enroll -u https://user1:user1pw@localhost:8055 --caname ca-manufacture -M "${PWD}/organizations/peerOrganizations/manufacture.wasteManagement.com/users/User1@manufacture.wasteManagement.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/manufacture/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/manufacture.wasteManagement.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/manufacture.wasteManagement.com/users/User1@manufacture.wasteManagement.com/msp/config.yaml"

  echo "Generating the org admin msp"
  set -x
  fabric-ca-client enroll -u https://manufactureadmin:manufactureadminpw@localhost:8055 --caname ca-manufacture -M "${PWD}/organizations/peerOrganizations/manufacture.wasteManagement.com/users/Admin@manufacture.wasteManagement.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/manufacture/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/manufacture.wasteManagement.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/manufacture.wasteManagement.com/users/Admin@manufacture.wasteManagement.com/msp/config.yaml"
}
#new end

function createOrderer() {
  echo "Enrolling the CA admin"
  mkdir -p organizations/ordererOrganizations/wasteManagement.com

  export FABRIC_CA_CLIENT_HOME=${PWD}/organizations/ordererOrganizations/wasteManagement.com

  set -x
  fabric-ca-client enroll -u https://admin:adminpw@localhost:9054 --caname ca-orderer --tls.certfiles "${PWD}/organizations/fabric-ca/ordererOrg/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo 'NodeOUs:
  Enable: true
  ClientOUIdentifier:
    Certificate: cacerts/localhost-9054-ca-orderer.pem
    OrganizationalUnitIdentifier: client
  PeerOUIdentifier:
    Certificate: cacerts/localhost-9054-ca-orderer.pem
    OrganizationalUnitIdentifier: peer
  AdminOUIdentifier:
    Certificate: cacerts/localhost-9054-ca-orderer.pem
    OrganizationalUnitIdentifier: admin
  OrdererOUIdentifier:
    Certificate: cacerts/localhost-9054-ca-orderer.pem
    OrganizationalUnitIdentifier: orderer' > "${PWD}/organizations/ordererOrganizations/wasteManagement.com/msp/config.yaml"

  # Since the CA serves as both the organization CA and TLS CA, copy the org's root cert that was generated by CA startup into the org level ca and tlsca directories

  # Copy orderer org's CA cert to orderer org's /msp/tlscacerts directory (for use in the channel MSP definition)
  mkdir -p "${PWD}/organizations/ordererOrganizations/wasteManagement.com/msp/tlscacerts"
  cp "${PWD}/organizations/fabric-ca/ordererOrg/ca-cert.pem" "${PWD}/organizations/ordererOrganizations/wasteManagement.com/msp/tlscacerts/tlsca.wasteManagement.com-cert.pem"

  # Copy orderer org's CA cert to orderer org's /tlsca directory (for use by clients)
  mkdir -p "${PWD}/organizations/ordererOrganizations/wasteManagement.com/tlsca"
  cp "${PWD}/organizations/fabric-ca/ordererOrg/ca-cert.pem" "${PWD}/organizations/ordererOrganizations/wasteManagement.com/tlsca/tlsca.wasteManagement.com-cert.pem"

  echo "Registering orderer"
  set -x
  fabric-ca-client register --caname ca-orderer --id.name orderer --id.secret ordererpw --id.type orderer --tls.certfiles "${PWD}/organizations/fabric-ca/ordererOrg/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo "Registering the orderer admin"
  set -x
  fabric-ca-client register --caname ca-orderer --id.name ordererAdmin --id.secret ordererAdminpw --id.type admin --tls.certfiles "${PWD}/organizations/fabric-ca/ordererOrg/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo "Generating the orderer msp"
  set -x
  fabric-ca-client enroll -u https://orderer:ordererpw@localhost:9054 --caname ca-orderer -M "${PWD}/organizations/ordererOrganizations/wasteManagement.com/orderers/orderer.wasteManagement.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/ordererOrg/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/ordererOrganizations/wasteManagement.com/msp/config.yaml" "${PWD}/organizations/ordererOrganizations/wasteManagement.com/orderers/orderer.wasteManagement.com/msp/config.yaml"

  echo "Generating the orderer-tls certificates, use --csr.hosts to specify Subject Alternative Names"
  set -x
  fabric-ca-client enroll -u https://orderer:ordererpw@localhost:9054 --caname ca-orderer -M "${PWD}/organizations/ordererOrganizations/wasteManagement.com/orderers/orderer.wasteManagement.com/tls" --enrollment.profile tls --csr.hosts orderer.wasteManagement.com --csr.hosts localhost --tls.certfiles "${PWD}/organizations/fabric-ca/ordererOrg/ca-cert.pem"
  { set +x; } 2>/dev/null

  # Copy the tls CA cert, server cert, server keystore to well known file names in the orderer's tls directory that are referenced by orderer startup config
  cp "${PWD}/organizations/ordererOrganizations/wasteManagement.com/orderers/orderer.wasteManagement.com/tls/tlscacerts/"* "${PWD}/organizations/ordererOrganizations/wasteManagement.com/orderers/orderer.wasteManagement.com/tls/ca.crt"
  cp "${PWD}/organizations/ordererOrganizations/wasteManagement.com/orderers/orderer.wasteManagement.com/tls/signcerts/"* "${PWD}/organizations/ordererOrganizations/wasteManagement.com/orderers/orderer.wasteManagement.com/tls/server.crt"
  cp "${PWD}/organizations/ordererOrganizations/wasteManagement.com/orderers/orderer.wasteManagement.com/tls/keystore/"* "${PWD}/organizations/ordererOrganizations/wasteManagement.com/orderers/orderer.wasteManagement.com/tls/server.key"

  # Copy orderer org's CA cert to orderer's /msp/tlscacerts directory (for use in the orderer MSP definition)
  mkdir -p "${PWD}/organizations/ordererOrganizations/wasteManagement.com/orderers/orderer.wasteManagement.com/msp/tlscacerts"
  cp "${PWD}/organizations/ordererOrganizations/wasteManagement.com/orderers/orderer.wasteManagement.com/tls/tlscacerts/"* "${PWD}/organizations/ordererOrganizations/wasteManagement.com/orderers/orderer.wasteManagement.com/msp/tlscacerts/tlsca.wasteManagement.com-cert.pem"

  echo "Generating the admin msp"
  set -x
  fabric-ca-client enroll -u https://ordererAdmin:ordererAdminpw@localhost:9054 --caname ca-orderer -M "${PWD}/organizations/ordererOrganizations/wasteManagement.com/users/Admin@wasteManagement.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/ordererOrg/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/ordererOrganizations/wasteManagement.com/msp/config.yaml" "${PWD}/organizations/ordererOrganizations/wasteManagement.com/users/Admin@wasteManagement.com/msp/config.yaml"
}

createwasteCollectionCompany
createrecyclingcenter
creategovernment
createmanufacture
createOrderer